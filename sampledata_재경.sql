DELETE FROM "USER"
WHERE USER_NO=8;

SELECT * FROM THEME;
SELECT * FROM TOURIST;
SELECT * FROM PRODUCT;

UPDATE PRODUCT SET REGION_NAME = '부산' 
WHERE PRODUCT_NO = 6;
UPDATE PRODUCT SET REGION_NAME = '서울'
WHERE PRODUCT_NO = 7;
UPDATE PRODUCT SET REGION_NAME = '서울'
WHERE PRODUCT_NO = 8;
UPDATE PRODUCT SET REGION_NAME = '부산'
WHERE PRODUCT_NO = 9;

UPDATE PRODUCT SET TOUR_DURATION = 3 WHERE PRODUCT_NO = 6;
UPDATE PRODUCT SET TOUR_DURATION = 4 WHERE PRODUCT_NO = 7;
UPDATE PRODUCT SET TOUR_DURATION = 5 WHERE PRODUCT_NO = 8;
UPDATE PRODUCT SET TOUR_DURATION = 8 WHERE PRODUCT_NO = 9;

SELECT * FROM PRODUCT
WHERE THEME_CODE = 1
ORDER BY CREATE_DT DESC;

COMMIT;

-- 테마 확인 id="selectThemeTypeList"
INSERT INTO THEME
(THEME_CODE, THEME_NAME, THEME_IMG)
VALUES(SEQ_THEME_CODE.NEXTVAL, '가이두', '/images/user.png');

-- 특정 테마의 삭제되지 않은 상품 수 조회
SELECT COUNT(*) FROM PRODUCT
WHERE PRODUCT_STATE = 'D'
AND THEME_CODE = 1
;
-- 상품 목록 조회 id="selectProductList"
SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE, REGION_NAME, REVIEW_STARS
FROM PRODUCT P
LEFT JOIN REVIEW USING (PRODUCT_NO)
WHERE PRODUCT_STATE = 'N'
ORDER BY PRODUCT_NO DESC
;
-- 인기 여행지 목록 조회 id="selectPopularProductList"
SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE, REGION_NAME, NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0')
FROM PRODUCT
LEFT JOIN REVIEW USING (PRODUCT_NO)
WHERE PRODUCT_STATE = 'N'
ORDER BY PRODUCT_NO DESC
;
-- 슈퍼가이드 상품 목록 조회 id="selectSuperProductList"
SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE, REGION_NAME, REVIEW_STARS 
FROM PRODUCT
LEFT JOIN REVIEW USING (PRODUCT_NO)
WHERE PRODUCT_STATE = 'N'
ORDER BY PRODUCT_NO DESC
;
-- 추천 상품 목록 조회 id="selectRecommProductList"
SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE, REGION_NAME, NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0')
FROM PRODUCT
LEFT JOIN REVIEW USING (PRODUCT_NO)
WHERE PRODUCT_STATE = 'N'
ORDER BY PRODUCT_NO DESC
;


-- 별점 .0
SELECT   
NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0')
FROM "REVIEW" R
JOIN "PRODUCT" P USING(PRODUCT_NO);

-- 상품 목록 조회 
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, 
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
WHERE P.PRODUCT_STATE = 'N'
ORDER BY P.CREATE_DT DESC;

SELECT *
FROM (
    SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, 
           (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
            FROM REVIEW 
            WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
    FROM PRODUCT P
    WHERE P.PRODUCT_STATE = 'N'
    ORDER BY P.CREATE_DT DESC
)
WHERE ROWNUM <= 16;

SELECT *
FROM (
    SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, 
           (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
            FROM REVIEW 
            WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
    FROM PRODUCT P
    WHERE P.PRODUCT_STATE = 'N'
    ORDER BY P.CREATE_DT DESC
)
WHERE ROWNUM <= 8;

SELECT *
FROM (
    SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, G.SUPER_GUIDE_FL, 
           (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
            FROM REVIEW 
            WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
    FROM PRODUCT P
    JOIN GUIDE G ON P.USER_NO = G.USER_NO
    WHERE P.PRODUCT_STATE = 'N' AND G.SUPER_GUIDE_FL = 'Y'
    ORDER BY REVIEW_STARS DESC
)
WHERE ROWNUM <= 8;



-- 테마 검색 상품 목록 조회 id="selectThemeProdList"
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, 
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
WHERE P.PRODUCT_STATE = 'N'
AND THEME_CODE = 2
ORDER BY P.CREATE_DT DESC
;


-- 검색 상품 수 (위치 TOUR_COURSE COURSE_NAME, 날짜 PRODUCT_DT PRODUCT_DT, 인원 수 PRODUCT PRODUCT_MIN_TOURIST/PRODUCT_MAX_TOURIST)
SELECT COUNT(*) 
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N';




-- 헤더 검색 조회 (조건 모두 부합)
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME,
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N'
AND (C.COURSE_NAME LIKE '서울' OR P.REGION_NAME LIKE '서울' OR P.PRODUCT_NAME LIKE '서울' OR P.PRODUCT_CONTENT LIKE '서울')
AND (D.PRODUCT_DT BETWEEN '2023-07-01' AND '2023-08-30')
AND P.PRODUCT_MAX_TOURIST <= 30
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME
;

-- 헤더 검색 조회 (조건 경우의수)
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME,
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N'
AND (C.COURSE_NAME LIKE '해운대' OR P.REGION_NAME LIKE '해운대' OR P.PRODUCT_NAME LIKE '해운대')
OR (D.PRODUCT_DT BETWEEN '2023-07-01' AND '2023-08-30')
OR P.PRODUCT_MAX_TOURIST <= 30
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME
;

SELECT PRODUCT_NAME FROM PRODUCT
LEFT JOIN PRODUCT_DT USING (PRODUCT_NO)
WHERE PRODUCT_DT BETWEEN '2023-06-01' AND '2023-06-30';

SELECT PRODUCT_NAME, PRODUCT_MAX_TOURIST 
FROM PRODUCT
WHERE PRODUCT_MAX_TOURIST <= 10;


-- 검색 조건 일치하는 상품 목록 조회 id="selectSearchResult"
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST,
	       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
	        FROM REVIEW 
	        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
	FROM PRODUCT P
	LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
	LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
	WHERE P.PRODUCT_STATE = 'N'
	AND (P.PRODUCT_NAME LIKE '%서울%' OR P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
	AND (D.PRODUCT_DT >= TO_DATE('2023-06-01', 'YYYY-MM-DD'))
	AND (D.PRODUCT_DT <= TO_DATE('2023-08-30', 'YYYY-MM-DD'))
	AND '15' BETWEEN P.PRODUCT_MIN_TOURIST AND P.PRODUCT_MAX_TOURIST
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST;

-- 헤더 위치 검색 id="locationSearch"
SELECT DISTINCT column_alias
FROM (
    SELECT 
        CASE
            WHEN C.COURSE_NAME LIKE '%서울%' THEN TRIM(C.COURSE_NAME)
            ELSE TRIM(P.REGION_NAME)
        END AS column_alias
    FROM PRODUCT P
    LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO
    WHERE P.PRODUCT_STATE = 'N'
    AND (C.COURSE_NAME LIKE '%서울%' OR P.REGION_NAME LIKE '%서울%')
);

SELECT DISTINCT column_alias
FROM (
    SELECT 
        CASE
            WHEN P.REGION_NAME LIKE '%서울%' THEN TRIM(P.REGION_NAME)
            ELSE TRIM(C.COURSE_NAME)
        END AS column_alias
    FROM PRODUCT P
    LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO
    WHERE P.PRODUCT_STATE = 'N'
    AND (P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
);

SELECT DISTINCT column_alias
FROM (
    SELECT 
        CASE
            WHEN C.COURSE_NAME LIKE '%서울%' THEN TRIM(C.COURSE_NAME)
            ELSE TRIM(P.REGION_NAME)
        END AS column_alias,
        CASE
            WHEN C.COURSE_NAME LIKE '%서울%' THEN 1
            ELSE 2
        END AS priority
    FROM PRODUCT P
    LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO
    WHERE P.PRODUCT_STATE = 'N'
    AND (P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
    ORDER BY priority ASC
);

SELECT DISTINCT column_alias
FROM (
    SELECT 
        CASE
            WHEN P.REGION_NAME LIKE '%서울%' THEN TRIM(P.REGION_NAME)
            ELSE TRIM(C.COURSE_NAME)
        END AS column_alias,
        CASE
            WHEN P.REGION_NAME LIKE '%서울%' THEN 1
            ELSE 2
        END AS priority
    FROM PRODUCT P
    LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO
    WHERE P.PRODUCT_STATE = 'N'
    AND (P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
    ORDER BY CASE WHEN P.REGION_NAME LIKE '%서울%' THEN 1 ELSE 2 END
    		, CASE WHEN C.COURSE_NAME LIKE '%서울%' THEN 1 ELSE 2 END
);


-- 검색 페이지 테마 검색 상품 목록 조회 id="selectSearchThemeProdList"

-- 검색 조건 일치하는 상품 목록 조회
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST, P.THEME_CODE, 
	       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
	        FROM REVIEW 
	        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
	FROM PRODUCT P
	LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
	LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
	WHERE P.PRODUCT_STATE = 'N'
	AND (P.PRODUCT_NAME LIKE '%서울%' OR P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
	AND (D.PRODUCT_DT >= TO_DATE('2023-06-01', 'YYYY-MM-DD'))
	AND (D.PRODUCT_DT <= TO_DATE('2023-08-30', 'YYYY-MM-DD'))
	AND '15' BETWEEN P.PRODUCT_MIN_TOURIST AND P.PRODUCT_MAX_TOURIST
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST, P.THEME_CODE 
;

-- 테마 검색
SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, 
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
WHERE P.PRODUCT_STATE = 'N'
AND THEME_CODE = 2
ORDER BY P.CREATE_DT DESC
;



SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST,
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N'
AND (P.PRODUCT_NAME LIKE '%서울%' OR P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
AND (D.PRODUCT_DT >= TO_DATE('2023-06-01', 'YYYY-MM-DD'))
AND (D.PRODUCT_DT <= TO_DATE('2023-08-30', 'YYYY-MM-DD'))
AND '15' BETWEEN P.PRODUCT_MIN_TOURIST AND P.PRODUCT_MAX_TOURIST
AND P.THEME_CODE = 2
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST
;

SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST, P.THEME_CODE,
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N'
  AND (P.PRODUCT_NAME LIKE '%서울%' OR P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%')
  AND (D.PRODUCT_DT >= TO_DATE('2023-06-01', 'YYYY-MM-DD'))
  AND (D.PRODUCT_DT <= TO_DATE('2023-08-30', 'YYYY-MM-DD'))
  AND '15' BETWEEN P.PRODUCT_MIN_TOURIST AND P.PRODUCT_MAX_TOURIST
  AND (P.THEME_CODE = 2 OR P.PRODUCT_NO IN (
    SELECT PRODUCT_NO
    FROM PRODUCT
    WHERE THEME_CODE = 2
  ))
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST, P.THEME_CODE
ORDER BY P.CREATE_DT DESC;

SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, 
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS,
        (SELECT COUNT(*) 
        FROM WISHLIST
        WHERE USER_NO = 25
        AND PRODUCT_NO = P.PRODUCT_NO) AS WISH_OR_NOT
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N'
AND (P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%' OR P.PRODUCT_NAME LIKE '%서울%')
--AND D.PRODUCT_DT >= TO_DATE('${firstday}', 'YYYY-MM-DD') 
--AND D.PRODUCT_DT <= TO_DATE('${lastday}', 'YYYY-MM-DD')
AND '20' BETWEEN P.PRODUCT_MIN_TOURIST AND P.PRODUCT_MAX_TOURIST
AND P.THEME_CODE = #{themeCode}
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME;

SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.THEME_CODE, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST,
       (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0') 
        FROM REVIEW 
        WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS
--        (SELECT COUNT(*) 
--        FROM WISHLIST
--        WHERE USER_NO = 25
--        AND PRODUCT_NO = P.PRODUCT_NO) AS WISH_OR_NOT
FROM PRODUCT P
LEFT JOIN TOUR_COURSE C ON P.PRODUCT_NO = C.PRODUCT_NO 
LEFT JOIN PRODUCT_DT D ON P.PRODUCT_NO = D.PRODUCT_NO 
WHERE P.PRODUCT_STATE = 'N'
AND (P.REGION_NAME LIKE '%서울%' OR C.COURSE_NAME LIKE '%서울%' OR P.PRODUCT_NAME LIKE '%서울%')
--		AND D.PRODUCT_DT >= TO_DATE('${firstday}', 'YYYY-MM-DD') 
--		AND D.PRODUCT_DT <= TO_DATE('${lastday}', 'YYYY-MM-DD')
AND '20' BETWEEN P.PRODUCT_MIN_TOURIST AND P.PRODUCT_MAX_TOURIST
AND P.THEME_CODE = 7
GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME, P.THEME_CODE, P.PRODUCT_MIN_TOURIST, P.PRODUCT_MAX_TOURIST;


-- 관심상품
SELECT *
FROM (
  SELECT ROWNUM, P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.REGION_NAME,
         (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0')
          FROM REVIEW
          WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS,
          (SELECT COUNT(*) 
			FROM "WISHLIST"
			WHERE USER_NO = 25
			AND PRODUCT_NO = P.PRODUCT_NO) AS WISH_OR_NOT
  FROM PRODUCT P
  WHERE P.PRODUCT_STATE = 'N'
  ORDER BY P.CREATE_DT DESC
);


-- 인기여행지 상품 목록 조회
SELECT *
FROM (
  SELECT ROWNUM,
         P.PRODUCT_NO,
         P.PRODUCT_NAME,
         P.PRODUCT_PRICE,
         P.REGION_NAME,
         (SELECT NVL(TO_CHAR(AVG(REVIEW_STARS), 'FM9.09'), '0.0')
          FROM REVIEW
          WHERE PRODUCT_NO = P.PRODUCT_NO) AS REVIEW_STARS,
         (SELECT COUNT(*)
          FROM WISHLIST
          WHERE PRODUCT_NO = P.PRODUCT_NO) AS WISH_COUNT
  FROM PRODUCT P
  WHERE P.PRODUCT_STATE = 'N'
  ORDER BY (SELECT COUNT(*) FROM WISHLIST WHERE PRODUCT_NO = P.PRODUCT_NO) DESC
);



SELECT COUNT(*) FROM WISHLIST
WHERE PRODUCT_NO = 3;


-- 메인 슬라이드 이벤트 조회
SELECT NVL("EVENT".EVENT_NO, 0) AS EVENT_NO,
	   DUMMY_MAIN_BANNER_ORDER AS MAIN_BANNER_ORDER,
       NVL2(BG_COLOR, BG_COLOR, '#ffffff') AS BG_COLOR,
       FILE_PATH
FROM (
    SELECT LEVEL AS DUMMY_MAIN_BANNER_ORDER
    FROM DUAL
    CONNECT BY LEVEL <= 8
) DUMMY_SEQ
LEFT JOIN "EVENT" ON DUMMY_MAIN_BANNER_ORDER = MAIN_BANNER_ORDER
LEFT JOIN "FILE" ON "EVENT".EVENT_NO = "FILE".EVENT_NO AND FILE_ORDER = 0
ORDER BY MAIN_BANNER_ORDER
;
SELECT * FROM "FILE"
WHERE EVENT_NO = 51
ORDER BY FILE_ORDER;




SELECT * FROM PRODUCT ORDER BY PRODUCT_NO;
SELECT * FROM PRODUCT_DT ORDER BY PRODUCT_NO;
SELECT * FROM PRODUCT_OPTION ORDER BY PRODUCT_NO;
SELECT * FROM TOUR_COURSE ORDER BY PRODUCT_NO;
SELECT * FROM REVIEW;
SELECT * FROM "FILE";
SELECT * FROM THEME;
SELECT * FROM TOURIST;
SELECT * FROM GUIDE;
SELECT * FROM "USER";
SELECT * FROM EVENT;
SELECT * FROM WISHLIST;
SELECT * FROM FAVORITE_REGION;



COMMIT;

-- 

----------------------------------------------------------------------------------
DELETE FROM PRODUCT_OPTION WHERE OPTION_NO = 17;
DELETE FROM PRODUCT_OPTION WHERE OPTION_NO = 18;
DELETE FROM PRODUCT_OPTION WHERE OPTION_NO = 20;

-- 상품번호 6번 부산 요트
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '12:00', 20, 6, 52);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '16:00', 20, 6, 52);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '20:00', 20, 6, 52);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '12:00', 20, 6, 53);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '16:00', 20, 6, 53);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '20:00', 20, 6, 53);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '12:00', 20, 6, 29);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '16:00', 20, 6, 29);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '20:00', 20, 6, 29);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '12:00', 20, 6, 48);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '16:00', 20, 6, 48);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '20:00', 20, 6, 48);

-- 상품번호 7번 낙산 야간 하이킹
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '20:00', 5, 7,  27);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '20:00', 5, 7,  49);

-- 상품번호 8번 경복궁 한복 체험
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '10:00', 20, 8, 55);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '14:00', 20, 8, 55);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '10:00', 20, 8, 50);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '14:00', 20, 8, 50);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '10:00', 20, 8, 28);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '14:00', 20, 8, 28);

-- 상품번호 9번 부산 투어
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '10:00', 10, 9, 30);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '10:00', 10, 9, 51);
INSERT INTO PRODUCT_OPTION (OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO, PRODUCT_DT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '10:00', 10, 9, 54);

COMMIT;




INSERT INTO PRODUCT_OPTION
(OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '05:00', 20, 6);
INSERT INTO PRODUCT_OPTION
(OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '05:00', 5, 7);
INSERT INTO PRODUCT_OPTION
(OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '05:00', 20, 8);
INSERT INTO PRODUCT_OPTION
(OPTION_NO, OPTION_NAME, OPTION_REST, PRODUCT_NO)
VALUES(SEQ_OPTION_NO.NEXTVAL, '08:00', 10, 9);



INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 6, null, null, 1, '/images/product/product_6_image_4.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 6, null, null, 2, '/images/product/product_6_image_2.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 6, null, null, 3, '/images/product/product_6_image_3.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 6, null, null, 4, '/images/product/product_6_image_1.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 6, null, null, 5, '/images/product/product_6_image_5.jpg');

INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 7, null, null, 1, '/images/product/product_7_image_3.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 7, null, null, 2, '/images/product/product_7_image_2.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 7, null, null, 3, '/images/product/product_7_image_1.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 7, null, null, 4, '/images/product/product_7_image_4.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 7, null, null, 5, '/images/product/product_7_image_5.jpg');

INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, null, null, 1, '/images/product/product_8_image_1.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, null, null, 2, '/images/product/product_8_image_2.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, null, null, 3, '/images/product/product_8_image_3.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, null, null, 4, '/images/product/product_8_image_4.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, null, null, 5, '/images/product/product_8_image_5.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, null, null, 6, '/images/product/product_8_image_6.jpg');

INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 9, null, null, 1, '/images/product/product_9_image_1.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 9, null, null, 2, '/images/product/product_9_image_2.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 9, null, null, 3, '/images/product/product_9_image_3.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 9, null, null, 4, '/images/product/product_9_image_4.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 9, null, null, 5, '/images/product/product_9_image_5.jpg');
INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, EVENT_NO, QNA_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 9, null, null, 6, '/images/product/product_9_image_6.jpg');

COMMIT;
----------------------------------------------------------------------------------

-- 회원 (구매자 판매자 공통)
-- 만든 유저 번호로 생성하기 가이드 2명 / 판매자 2명
SELECT USER_NO, USER_EMAIL, USER_PASSWORD, USER_NAME, USER_TEL, PROFILE_IMG, CREATE_DT, USER_TYPE, USER_STATE
FROM "USER";

INSERT INTO "USER"
(USER_NO, USER_EMAIL, USER_PASSWORD, USER_NAME, USER_TEL, PROFILE_IMG, CREATE_DT, USER_TYPE, USER_STATE)
VALUES(SEQ_USER_NO.NEXTVAL, 'guide07@gmail.com', 'pass07', '칠번가이드', '01012341234', '/images/profile', SYSDATE	, 'G', 'Y');

INSERT INTO "USER"
(USER_NO, USER_EMAIL, USER_PASSWORD, USER_NAME, USER_TEL, PROFILE_IMG, CREATE_DT, USER_TYPE, USER_STATE)
VALUES(SEQ_USER_NO.NEXTVAL, 'guide08@gmail.com', 'pass08', '팔번가이드', '01043214321', '/images/profile', SYSDATE	, 'G', 'N');

INSERT INTO "USER"
(USER_NO, USER_EMAIL, USER_PASSWORD, USER_NAME, USER_TEL, PROFILE_IMG, CREATE_DT, USER_TYPE, USER_STATE)
VALUES(SEQ_USER_NO.NEXTVAL, 'tourist07@gmail.com', 'pass07', '칠번여행객', '01012121212', '/images/profile', SYSDATE	, 'T', 'N');

INSERT INTO "USER"
(USER_NO, USER_EMAIL, USER_PASSWORD, USER_NAME, USER_TEL, PROFILE_IMG, CREATE_DT, USER_TYPE, USER_STATE)
VALUES(SEQ_USER_NO.NEXTVAL, 'tourist08@gmail.com', 'pass08', '팔번여행객', '01045454545', '/images/profile', SYSDATE	, 'T', 'N');

COMMIT;


-- 회원(여행객) 아이디 : tourist01 통일해주기~~
SELECT USER_NO, PASSPORT_NO, PRIMARY_LANGUAGE, EMERGENCY_CONTACT, FACE_IMG
FROM TOURIST;

INSERT INTO TOURIST
(USER_NO, PASSPORT_NO, PRIMARY_LANGUAGE, EMERGENCY_CONTACT, FACE_IMG)
VALUES(10, 'M12341234', 'english', '01012301230', '/images/face');

INSERT INTO TOURIST
(USER_NO, PASSPORT_NO, PRIMARY_LANGUAGE, EMERGENCY_CONTACT, FACE_IMG)
VALUES(11, 'M01230123', 'chinese', '01045644564', '/images/face');

-- 회원(가이드) 아이디 : guide01 통일해주기~~
SELECT USER_NO, LANGUAGE_SKILL, ACTIVITY_AREA, CONFIRMATION_NO, SUPER_GUIDE_FL
FROM GUIDE;

INSERT INTO GUIDE
(USER_NO, LANGUAGE_SKILL, ACTIVITY_AREA, CONFIRMATION_NO, SUPER_GUIDE_FL)
VALUES(8, 'English', '서울', 'A46461234', 'N'	);

INSERT INTO GUIDE
(USER_NO, LANGUAGE_SKILL, ACTIVITY_AREA, CONFIRMATION_NO, SUPER_GUIDE_FL)
VALUES(9, 'Spanish', '부산', 'A12345678', 'N'	);

COMMIT;

----------------------------------------------------------------------------------

-- 자기소개 (판매자)
SELECT USER_NO, BIRTH_YEAR, JOB, PETS, HOBBY, SUB_LANG, ABROAD_EXPERIENCE, MBTI, STRENGTH, FAVORITE_SONG, TMI, MAJOR, DOPAMINE, USELESS_TALENT, CAP_LIST
FROM PR;

INSERT INTO PR
(USER_NO, BIRTH_YEAR, JOB, PETS, HOBBY, SUB_LANG, ABROAD_EXPERIENCE, MBTI, STRENGTH, FAVORITE_SONG, TMI, MAJOR, DOPAMINE, USELESS_TALENT, CAP_LIST)
VALUES(8, 1997, 'YouTuber', 'DOGGY', 'Running', '', '', 'ENFP', '', 'Harry Styles - Watermelon Sugar', '', '', '', '', '');

INSERT INTO PR
(USER_NO, BIRTH_YEAR, JOB, PETS, HOBBY, SUB_LANG, ABROAD_EXPERIENCE, MBTI, STRENGTH, FAVORITE_SONG, TMI, MAJOR, DOPAMINE, USELESS_TALENT, CAP_LIST)
VALUES(9, 1968, 'CEO', 'Two Dogs and Two Cats', '', '', '', 'ESTJ', '', 'Bee Gees - How Deep Is Your Love', '', 'Management', '', '', '');

COMMIT;

-- 관심 지역 (구매자) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
SELECT FAVORITE_REGION_NO, REGION_CODE, USER_NO
FROM FAVORITE_REGION;

INSERT INTO FAVORITE_REGION
(FAVORITE_REGION_NO, REGION_CODE, USER_NO)
VALUES(SEQ_FAVORITE_REGION_NO.NEXTVAL, 0, 0);

INSERT INTO FAVORITE_REGION
(FAVORITE_REGION_NO, REGION_CODE, USER_NO)
VALUES(SEQ_FAVORITE_REGION_NO.NEXTVAL, 0, 0);

-- 관심 상품 (구매자) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
SELECT WISHLIST_NO, USER_NO, PRODUCT_NO, WISH_DT
FROM WISHLIST;

INSERT INTO WISHLIST
(WISHLIST_NO, USER_NO, PRODUCT_NO, WISH_DT)
VALUES(SEQ_WISHLIST_NO.NEXTVAL, 0, 0, SYSDATE	);

INSERT INTO WISHLIST
(WISHLIST_NO, USER_NO, PRODUCT_NO, WISH_DT)
VALUES(SEQ_WISHLIST_NO.NEXTVAL, 0, 0, SYSDATE	);

----------------------------------------------------------------------------------

-- 상품 (4개씩 넣어주세요~~)
SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PACKAGE, PRODUCT_CONTENT, PRODUCT_PRICE, PRODUCT_ADD_PRICE, PRODUCT_MIN_TOURIST, PRODUCT_MAX_TOURIST, USER_NO, REGION_CODE, THEME_CODE, PRODUCT_STATE, CREATE_DT, GUIDE_LANGUAGE, VIEW_COUNT
FROM PRODUCT;

INSERT INTO PRODUCT
(PRODUCT_NO, PRODUCT_NAME, PRODUCT_PACKAGE, PRODUCT_CONTENT, PRODUCT_PRICE, PRODUCT_ADD_PRICE, PRODUCT_MIN_TOURIST, PRODUCT_MAX_TOURIST, USER_NO, REGION_CODE, THEME_CODE, PRODUCT_STATE, CREATE_DT, GUIDE_LANGUAGE, VIEW_COUNT)
VALUES(SEQ_PRODUCT_NO.NEXTVAL, '아름다운 부산 바다에서 요트투어 즐기기', 1, '2021년식 프랑스 명품 BALI 43 요트와 프랑스 명품 Fountaine-Pajot lipari 41과 함께 부산의 랜드마크인 광안대교, 마린시티와 푸른 바다를 눈 앞에서 체험하고 즐길 수 있습니다.', 20000, '', 10, 20, 9, 7, 1, 'N'	, SYSDATE	, 'English&Spanish', 0	);

INSERT INTO PRODUCT
(PRODUCT_NO, PRODUCT_NAME, PRODUCT_PACKAGE, PRODUCT_CONTENT, PRODUCT_PRICE, PRODUCT_ADD_PRICE, PRODUCT_MIN_TOURIST, PRODUCT_MAX_TOURIST, USER_NO, REGION_CODE, THEME_CODE, PRODUCT_STATE, CREATE_DT, GUIDE_LANGUAGE, VIEW_COUNT)
VALUES(SEQ_PRODUCT_NO.NEXTVAL, '서울 성벽에서 즐기는 야간 하이킹 & 현지 음식 체험', 1, '혜화에 있는 언덕배기 공원인 낙산공원은 현지 대학생들에게 인기 있는 낭만적인 하이킹 장소입니다. 성벽에서 서울과 N서울타워의 아름다운 야경을 감상하고 하이킹 후 맛있는 현지 음식을 즐겨보세요!', 68000, '', 1, 5, 8, 1, 4, 'N'	, SYSDATE	, 'English', 0	);

INSERT INTO PRODUCT
(PRODUCT_NO, PRODUCT_NAME, PRODUCT_PACKAGE, PRODUCT_CONTENT, PRODUCT_PRICE, PRODUCT_ADD_PRICE, PRODUCT_MIN_TOURIST, PRODUCT_MAX_TOURIST, USER_NO, REGION_CODE, THEME_CODE, PRODUCT_STATE, CREATE_DT, GUIDE_LANGUAGE, VIEW_COUNT)
VALUES(SEQ_PRODUCT_NO.NEXTVAL, '취향따라 골라 즐기는 경복궁 한복 체험', 1, '간단한 한복과 악세서리에 대한 설명과 함께 한복 매니저의 도움을 받아 한복을 편하게 고르실 수 있습니다.', 18000, '', 5, 20, 8, 1, 3, 'N'	, SYSDATE	, 'English', 0	);

INSERT INTO PRODUCT
(PRODUCT_NO, PRODUCT_NAME, PRODUCT_PACKAGE, PRODUCT_CONTENT, PRODUCT_PRICE, PRODUCT_ADD_PRICE, PRODUCT_MIN_TOURIST, PRODUCT_MAX_TOURIST, USER_NO, REGION_CODE, THEME_CODE, PRODUCT_STATE, CREATE_DT, GUIDE_LANGUAGE, VIEW_COUNT)
VALUES(SEQ_PRODUCT_NO.NEXTVAL, '부산에서 놓칠 수 없는 즐길 거리', 1, '부산을 대표하는 해동용궁사와 감천문화마을을 가실 수 있습니다. 후인월 해안마을과 산복도로 전망대에서 부산의 풍경과 부산의 정취를 느낄 수 있는 전망대를 즐기실 수 있습니다.', 45000, '', 5, 10, 9, 7, 1, 'N'	, SYSDATE	, 'English&Spanish', 0	);

COMMIT;

-- 예약 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
SELECT RESERVATION_NO, PRODUCT_NO, USER_NO, CREATE_DT, RESERVATION_STATE, PAYMENT_METHOD, GUEST_COUNT, PRODUCT_DT_NO
FROM RESERVATION;

INSERT INTO RESERVATION
(RESERVATION_NO, PRODUCT_NO, USER_NO, CREATE_DT, RESERVATION_STATE, PAYMENT_METHOD, GUEST_COUNT, RESERVATION_DT)
VALUES(SEQ_RESERVATION_NO.NEXTVAL, 0, 0, SYSDATE	, 'Y'	, '', 0, '');

-- 리뷰
SELECT REVIEW_NO, USER_NO, REVIEW_MESSAGE, REVIEW_STARS, REVIEW_DEL_FL, PRODUCT_NO, CREATE_DT
FROM REVIEW;

INSERT INTO REVIEW
(REVIEW_NO, USER_NO, REVIEW_MESSAGE, REVIEW_STARS, REVIEW_DEL_FL, PRODUCT_NO, CREATE_DT)
VALUES(SEQ_REVIEW_NO.NEXTVAL, 10, 'Le séjour chez Carmela s’est très bien passé. Nous avons été bien accueillis et l’appartement était fidèle à l’annonce. Merci à notre hôte pour sa gentillesse et sa disponibilité.', 4, 'N'	, 6, SYSDATE	);

INSERT INTO REVIEW
(REVIEW_NO, USER_NO, REVIEW_MESSAGE, REVIEW_STARS, REVIEW_DEL_FL, PRODUCT_NO, CREATE_DT)
VALUES(SEQ_REVIEW_NO.NEXTVAL, 11, 'Great place, in an extremely well-connected area. Cosy and elegant apartment. Happy to have been hosted by the kind Carmela!', 4.5, 'N'	, 7, SYSDATE	);

COMMIT;


-- 지역 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
SELECT REGION_CODE, REGION_NAME
FROM REGION;

INSERT INTO REGION
(REGION_CODE, REGION_NAME)
VALUES(SEQ_REGION_CODE.NEXTVAL, '');



-- 여행 코스
SELECT COURSE_NO, PRODUCT_NO, COURSE_NAME, COURSE_ORDER, LATITUDE, LONGITUDE, BOSS_COURSE_FL
FROM TOUR_COURSE;

INSERT INTO TOUR_COURSE
(COURSE_NO, PRODUCT_NO, COURSE_NAME, COURSE_ORDER, LATITUDE, LONGITUDE, BOSS_COURSE_FL)
VALUES(SEQ_TOURCOURSE_NO.NEXTVAL, 7, '낙산공원', 1, '37.5808', '127.0075', 'Y'	);
INSERT INTO TOUR_COURSE
(COURSE_NO, PRODUCT_NO, COURSE_NAME, COURSE_ORDER, LATITUDE, LONGITUDE, BOSS_COURSE_FL)
VALUES(SEQ_TOURCOURSE_NO.NEXTVAL, 7, '촌놈', 2, '37.5829', '127.0024', 'N'	);

INSERT INTO TOUR_COURSE
(COURSE_NO, PRODUCT_NO, COURSE_NAME, COURSE_ORDER, LATITUDE, LONGITUDE, BOSS_COURSE_FL)
VALUES(SEQ_TOURCOURSE_NO.NEXTVAL, 8, '경복궁', 2, '37.5799', '126.977', 'Y'	);
INSERT INTO TOUR_COURSE
(COURSE_NO, PRODUCT_NO, COURSE_NAME, COURSE_ORDER, LATITUDE, LONGITUDE, BOSS_COURSE_FL)
VALUES(SEQ_TOURCOURSE_NO.NEXTVAL, 8, '한복남 경복궁점', 1, '37.5763', '126.9733', 'N'	);

DELETE FROM TOUR_COURSE
WHERE PRODUCT_NO = 8;

COMMIT;


-- 파일 (상품이미지 임의로 해도됨니다~~)
SELECT FILE_NO, PRODUCT_NO, FILE_ORDER, FILE_PATH
FROM "FILE";

INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 7, 1, '/images/file');

INSERT INTO "FILE"
(FILE_NO, PRODUCT_NO, FILE_ORDER, FILE_PATH)
VALUES(SEQ_FILE_NO.NEXTVAL, 8, 1, '/images/file');

COMMIT;


-- 상품 일정(옵션) (판매자)
SELECT PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT
FROM PRODUCT_DT;

INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 6, '2023/08/10');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 6, '2023/08/15');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 6, '2023/07/14');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 6, '2023/09/01');

INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 7, '2023/08/01');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 7, '2023/08/11');

INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 8, '2023/08/26');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 8, '2023/08/30');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 8, '2023/08/08');

INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 9, '2023/07/14');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 9, '2023/08/20');
INSERT INTO PRODUCT_DT
(PRODUCT_DT_NO, PRODUCT_NO, PRODUCT_DT)
VALUES(SEQ_PRODUCT_DT_NO.NEXTVAL, 9, '2023/08/17');

COMMIT;


/*
-- 채팅
SELECT CHAT_NO, READ_OR_NOT, CHAT_MESSAGE, CHAT_SEND_DT, CHATROOM_NO, USER_NO
FROM CHAT;

INSERT INTO CHAT
(CHAT_NO, READ_OR_NOT, CHAT_MESSAGE, CHAT_SEND_DT, CHATROOM_NO, USER_NO)
VALUES(SEQ_CHAT_NO.NEXTVAL, 'N'	, '', SYSDATE	, 0, 0);


-- 채팅룸
SELECT CHATROOM_NO, CREATE_DT, PRODUCT_NO, USER_NO
FROM CHATROOM;

INSERT INTO CHATROOM
(CHATROOM_NO, CREATE_DT, PRODUCT_NO, USER_NO)
VALUES(SEQ_CHATROOM_NO.NEXTVAL, SYSDATE	, 0, 0);
*/

/*
-- 알림 (구매자 판매자 모두)
SELECT NOTIFICATION_NO, RECEIVER_NO, SENDER_NO, NOTIFICATION_CONTENT, CREATE_DT, NOTIFICATION_URL, NOTIFICATION_TYPE
FROM NOTIFICATION;

INSERT INTO NOTIFICATION
(NOTIFICATION_NO, RECEIVER_NO, SENDER_NO, NOTIFICATION_CONTENT, CREATE_DT, NOTIFICATION_URL, NOTIFICATION_TYPE)
VALUES(SEQ_NOTICE_NO.NEXTVAL, 0, 0, '', '', '', '');
*/

/*
-- 1:1 문의 (구매자 판매자 모두)
SELECT QNA_NO, QNA_EMAIL, QNA_TITLE, QNA_CONTENT, QNA_DATE, QNA_DEL_FL, QNA_CHECK_FL, USER_NO, QNA_ANSWER
FROM QNA;

INSERT INTO QNA
(QNA_NO, QNA_EMAIL, QNA_TITLE, QNA_CONTENT, QNA_DATE, QNA_DEL_FL, QNA_CHECK_FL, USER_NO, QNA_ANSWER)
VALUES(SEQ_QNA_NO.NEXTVAL, '', '', '', SYSDATE	, 'N'	, 'N'	, 0, '');

-- 1:1문의 이미지 (구매자 판매자 모두)
SELECT QNA_IMG_NO, QNA_NO, QNA_IMG
FROM QNA_IMG;

INSERT INTO QNA_IMG
(QNA_IMG_NO, QNA_NO, QNA_IMG)
VALUES(SEQ_QNA_IMG_NO.NEXTVAL, 0, '');
*/

-- 이벤트
SELECT EVENT_NO, EVENT_NAME, EVENT_CONTENT, EVENT_END_DT, CREATE_DT, EVENT_IMG
FROM EVENT;

INSERT INTO EVENT
(EVENT_NO, EVENT_NAME, EVENT_CONTENT, EVENT_END_DT, CREATE_DT, EVENT_IMG)
VALUES(SEQ_EVENT_NO.NEXTVAL, '', '', '', '', '');



/*
-- 테마 (이미 끝)
SELECT THEME_CODE, THEME_NAME
FROM THEME;

INSERT INTO THEME
(THEME_CODE, THEME_NAME)
VALUES(SEQ_THEME_CODE.NEXTVAL, '');
*/





