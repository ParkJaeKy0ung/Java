SELECT EMP_NAME, SALARY, JOB_CODE, HIRE_DATE FROM EMPLOYEE

-- 300만 이상
SELECT EMP_ID, EMP_NAME, SALARY, HIRE_DATE
FROM EMPLOYEE
WHERE SALARY >= 3000000
ORDER BY SALARY DESC;

-- 부서명이 총무부인 부서에 존재하는 사원의 
-- 사번, 이름, 급여, 부서명을 사번 오름차순으로 조회
SELECT EMP_ID, EMP_NAME, SALARY, DEPT_TITLE
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_TITLE = '총무부'
ORDER BY EMP_ID;

-- NULL 값 구할 때 (잘 안 쓰는 방법)
SELECT * FROM (
				SELECT EMP_ID, EMP_NAME, SALARY, NVL(DEPT_TITLE, 'NULL') DEPT_TITLE
				FROM EMPLOYEE
				LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
				WHERE DEPT_CODE IS NULL
				ORDER BY EMP_ID)
WHERE DEPT_TITLE = 'NULL';


-- 직급명을 입력 받아 일치하는 사원의
-- 부서명, 직급명, 이름, 이메일을  이름 오름 차순으로 조회
SELECT NVL(DEPT_TITLE, '부서없음'), JOB_NAME, EMP_NAME, EMAIL
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
LEFT JOIN JOB USING (JOB_CODE)
WHERE JOB_NAME = ''
ORDER BY EMP_NAME;

-- 사번, 이름, 직급명, 급여 조회
-- 급여 내림차순
SELECT EMP_ID, EMP_NAME, JOB_NAME, SALARY 
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE SALARY BETWEEN 3000000 AND 6000000
ORDER BY SALARY DESC;

-- 입력 2개
-- 조회 결과 N행 (List 필요)

COMMIT;

SELECT MAX(EMP_ID) FROM EMPLOYEE;

-- 사번 생성 시퀀스(223번 시작)
CREATE SEQUENCE SEQ_EMP_ID
START WITH 223  -- 223번 시작
INCREMENT BY 1 -- 1씩 증가
NOCYCLE -- 반복 없음
NOCACHE; -- 미리 만들어두는 번호 없음

-- SEQ_EMP_ID.NEXTVAL : 다음 번호 생성
-- SEQ_EMP_ID.CURRVAL : 현재 번호 조회


UPDATE EMPLOYEE 
SET EMAIL = ?,
	PHONE = ?,
	SALARY = ?
WHERE EMP_ID = ?;

SELECT EMP_ID, EMP_NAME, PHONE, EMAIL, SALARY, JOB_NAME
FROM EMPLOYEE 
NATURAL JOIN JOB
WHERE EMP_ID = 223;


UPDATE EMPLOYEE 
SET ENT_YN = 'Y', ENT_DATE = SYSDATE 
WHERE EMP_ID = 223;

SELECT * FROM EMPLOYEE
WHERE EMP_ID = 223;
